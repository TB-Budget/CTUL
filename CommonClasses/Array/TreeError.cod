class inherited Array.Tree "Дерево ошибок" synonym ДеревоОшибок;
import classes Array.Lib;
--import Sconsole;
import Sys.Consts;

inclass public
--{{ inclass public
  type tArrayTreeError = Array.TreeError;
  func Create: tArrayTreeError;
    result = inherited Create;
    result.ls = chr(1);
  end;


--}}  inclass public



inclass private


inobject public

  var ls          :string:= chr(1); -- разделитель групп


  -- параметры вывода

  var ImageDef :variant[2]:=
  [SetImageDef('ImageName' --  ImageName = не шрифт а картинки
               ,IconsDir+'PostClose'  -- галка в круге
               ,IconsDir+'AddFolder'  -- папка закрытая с плюсом внутри
               ,IconsDir+'Folder'  -- папка закрытая
               ,IconsDir+'OpenFolder'  -- папка открытая
               ,IconsDir+'Error'   --
               ,''
               ,0
               )
  ,SetImageDef('WingDings'
               ,'ü' -- галка
               ,'0' -- папка закрытая
               ,'0' -- папка закрытая
               ,'1' -- папка открытая
               ,IconsDir+'Error'   --  ,'⮿' -- страничка с текстом
               ,''
               ,0
               ,clRed
               ,true
               )
  ,SetImageDef('ImageName' --  ImageName = не шрифт а картинки
               ,IconsDir+'PostClose'  -- галка в круге
               ,IconsDir+'AddFolder'  -- папка закрытая с плюсом внутри
               ,IconsDir+'Folder'  -- папка закрытая
               ,IconsDir+'OpenFolder'  -- папка открытая
               ,IconsDir+'Warning'   --
               ,''
               ,0
               )
  ,SetImageDef('WingDings'
               ,'ü' -- галка
               ,'0' -- папка закрытая
               ,'0' -- папка закрытая
               ,'1' -- папка открытая
               ,IconsDir+'Warning'   --  ,'⚠ ' -- страничка с текстом   ⮿   ⯑  ߗ  ߗ` ߗΠߛƠ⊕ ⚠   ߞ΍
               ,''
               ,0
               ,0x10C0C0 -- ЖЕЛТЫЙ
               ,true
               )
  ];

  var ErrorStyle :integer:= if(webside,2,1); -- по умолчанию вместо картинок - символы WingDings
  var WarningStyle :integer:= if(webside,4,3); -- по умолчанию вместо картинок - символы WingDings
  var ErrorCount :integer;
  var WarningCount :integer;

  proc AddErrorControl(CompID :String; CtrlName :string = nil; SortLevel: integer = nil; ImageStyle :integer = ErrorStyle);
    AddItemsBy([['Z'+ls+'ERROR'+ls+chr(SortLevel+2)+CompID, CtrlName, '>> [Х] <<']]);
    position = Count;
    Image = ImageStyle;
    ErrorCount = ErrorCount + 1;
  end;
  proc AddWarningControl(CompID :String; CtrlName :string = nil; SortLevel: integer = nil; ImageStyle :integer = WarningStyle);
    AddItemsBy([['Z'+ls+'WARNING'+ls+chr(SortLevel+2)+CompID, CtrlName, '>> [!] <<']]);
    position = Count;
    Image = ImageStyle;
    WarningCount = WarningCount + 1;
  end;

  func CompID :string;
    return System.Delete(item[Elem],1,1);
  end;

  func  NormalizeGroups :variant[2];
    AddItemsBy([['Z'+ls             ,'Список несоответствий','Переход к несоответствию']]);
    if ErrorCount > 0:
      AddItemsBy([['Z'+ls+'ERROR'+ls  ,'Ошибки!',' всего: '+str(ErrorCount)]]);
    fi;
    if WarningCount > 0:
      AddItemsBy([['Z'+ls+'WARNING'+ls,'Внимание!',' всего: '+str(WarningCount)]]);
    fi;
    result = inherited NormalizeGroups;
  end;

inobject private

end