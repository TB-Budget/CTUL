extends Com.Ctrl.IButton "";
Import Com.Utils;-- Com.Consts, Com.Lib;

--линки на расширения
--Link:Com.Ctrl.IButton  -- Базовый класс
inclass public

  #Override;
  func ClassOnChangeStyleIni :Storage;
    Result = Inherited ClassOnChangeStyleIni;
  end;

  #Override;
  func NamedClassStyleIni :Storage; -- добавление стилей с учетом наследования
    Result = Inherited NamedClassStyleIni;
    var vAdd :Storage;

    if not Result.AsStatic is Storage:
      Result.AsStatic = Storage.Create;
    fi;
    vAdd = Result.AsStatic as Storage;
    vAdd['border'] = CreateStorage(['Value','none', 'ReWrite',true]);
    vAdd['padding'] = CreateStorage(['Value','0', 'ReWrite',true]);
    vAdd['border-radius'] = CreateStorage(['Value','0', 'ReWrite',true]);

    if not Result.OnlyImage is Storage:
      Result.OnlyImage = Storage.Create;
    fi;
    vAdd = Result.OnlyImage as Storage;
    vAdd['display'] = CreateStorage(['Value','flex', 'ReWrite',true]); -- коррекция для 10424
    vAdd['padding'] = CreateStorage(['Value','5px', 'ReWrite',true]); -- коррекция для 10424

    if not Result.Caption is Storage:
      Result.Caption = Storage.Create;
    fi;
    vAdd = Result.Caption as Storage;
    vAdd['padding'] = CreateStorage(['Value','6px', 'ReWrite',true]);  -- коррекция для 10424


--    if not Result.icon_caption is Storage:
--      Result.icon_caption = Storage.Create;
--    fi;
--    vAdd = Result.icon_caption as Storage;


  end;

inclass private
  #Override;
  func SetDefClassStyle(aSelf :Com.Ctrl.IControl; var aStyle :Storage; aIndex :Integer = 1) :Logical;
    var vSelf :Com.Ctrl.IButton = aSelf as Com.Ctrl.IButton;

    Result =  Inherited SetDefClassStyle(vSelf, aStyle, aIndex);
    ---- дополнительные обработчики класса ----

--    if Result and aSelf.ExtP?.OnlyImage as Logical or (vSelf.ImageName <> '' and not vSelf.OnList and (not vSelf.HasCaption or vSelf.Caption = '')):
    if Result and aSelf.ExtP?.OnlyImage as Logical or (vSelf.ImageName <> '' and (not vSelf.OnList) and vSelf.Caption = ''):
       aStyle = ChangeStyle(NamedClassStyle?.OnlyImage, aStyle);
    fi;

--    if Result and aSelf.ExtP?.Caption as Logical or (not vSelf.OnList and (vSelf.HasCaption or vSelf.Caption <> '')):
    if Result and aSelf.ExtP?.Caption as Logical or ((not vSelf.OnList) and vSelf.Caption <> ''):
       aStyle = ChangeStyle(NamedClassStyle?.Caption, aStyle);
    fi;

    if Result and aSelf.ExtP?.AsStatic as Logical:
       aStyle = ChangeStyle(NamedClassStyle?.AsStatic, aStyle);
    fi;

  end;

end