#Help `подтаблица на основе внешних данных`;
class inherited Com.Ctrl.IFrame "subtable based on external data"; -- Synonym extSubTable;

import Com.Def, Com.Consts, Com.Lib;


inclass public


  #Help `Приводит aObject к типу LinkTable.Base или создает новый LinkTable.Base, если aObject = nil`;
  func TSelf(aObject :Object = Create) :LinkTable.Base;
    Result = aObject as LinkTable.Base;
  end;

 #Help `Инициализация дефолтных значении для нового объекта ILinkTable`;
  var DefCreateParam :storage:= Com.Utils.CreateStorage(['FrameType'   ,Com.Consts.TableFrame
                                                        ,'Numbering'   ,true
                                                        ,'CanInsert'   ,true
                                                        ,'CanDelete'   ,true
                                                        ,'Orientation' ,Horizontal
                                                        ,'AutoSize'    ,true
                                                        ]);

  #Override;
  func Create :LinkTable.Base;
    Result = TSelf(inherited Create);
    SetParam(Result, DefCreateParam);

  end;

  #Override;
  func CreateEx( aName :String = '' ) :LinkTable.Base;
    Result = TSelf(inherited CreateEx(aName));
  end;

  #Help `  Создает ILinkTable и добавляет его в ParentIFrame
           aName - имя фрейма ILinkTable
           aLinkTableParam - Storage с параметрами для создания ILinkTable
           (один из параметров в aLinkTableParam - LinkParam :storage - параметры связывания с внешними данными)
           aPrevious - IControl после которого будет вставлен ILinkTable (по умолчанию в конец)
        `;
  func NewLinkTable(ParentIFrame : IFrame; aName :String = ""; aLinkTableParam :Storage = nil; aPrevious :IControl = nil ) :LinkTable.Base;
    with ParentIFrame do
      if aName = "":
        #if Build >= 10333 then
          aName = FID + "_Subframe" + Str(Components.Count + 1);
        #else
          aName = FID + "_Subframe" + Str(FramesCount + 1);
        #end
      fi;
      Result = TSelf(AddFrame( Self.CreateEx(Owner.ConstructID(Sys.Vocabulary.Voc.Key(aName))), aPrevious ));
      SetParam(Result, aLinkTableParam);
    end;
  end;


inobject public

  var FArrayLinks :LinkTable.IArraySync := LinkTable.IArraySync.Create;

  #Help `  Параметры определяющие взаимосвязь таблицы с "внешними" данными
           используется в методе DefSyncData
   `;
  var LinkParam :Storage:= Storage.Create;



inobject private


end